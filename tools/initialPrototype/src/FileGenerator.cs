using System;
using System.IO;

namespace dotnet_now
{
    public static class FileContent
    {
        public const string Csproj = @"<Project Sdk=""Microsoft.NET.Sdk.Server"">

  <!--Your package dependencies will appear here when you use `dotnet packages add <packageName>`-->

</Project>";

        public const string WatcherTargets = @"<!-- This file is autogenerated by dotnet-watch. -->
<Project xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">
  <PropertyGroup>
    <_DotNetWatchTargetsFile Condition=""'$(_DotNetWatchTargetsFile)' == ''"">$(MSBuildThisFileFullPath)</_DotNetWatchTargetsFile>
  </PropertyGroup>

  <Import Project=""$(_DotNetWatchTargetsLocation)\DotNetWatchCommon.targets""
          Condition=""Exists('$(_DotNetWatchTargetsLocation)\DotNetWatchCommon.targets')"" />

  <ImportGroup Condition=""'$(TargetFramework)'==''"">
    <Import Project=""$(_DotNetWatchTargetsLocation)\DotNetWatchOuter.targets""
            Condition=""Exists('$(_DotNetWatchTargetsLocation)\DotNetWatchOuter.targets')"" />
  </ImportGroup>
  <ImportGroup Condition=""'$(TargetFramework)'!=''"">
    <Import Project=""$(_DotNetWatchTargetsLocation)\DotNetWatchInner.targets""
            Condition=""Exists('$(_DotNetWatchTargetsLocation)\DotNetWatchInner.targets')"" />
  </ImportGroup>
</Project>";

        public const string Program = @"using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;

namespace TOKEN
{
    public class Program
    {
        public static void Main(string[] args)
        {
            BuildWebHost(args).Run();
        }

        public static IWebHost BuildWebHost(string[] args) =>
            WebHost.CreateDefaultBuilder(args)
                .UseStartup<Startup>()
                .Build();
    }
}";

        public const string Startup = @"using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc.Formatters;
using Microsoft.Extensions.DependencyInjection;

namespace TOKEN
{
    public class Startup
    {
        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddMvc();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseMvc();
        }
    }
}";

        public const string AppCodeTemplate = @"using System;
using Microsoft.AspNetCore.Mvc;

public class TOKENController
{
    [HttpGet(""/"")]
    public string Hello()
    {
        return ""Hello!"";
    }
}";

        public const string CsprojForApp = @"<Project Sdk=""Microsoft.NET.Sdk.Web"">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <UserSecretsId>aspnet-now-46794AB0-D6AD-4EF6-97A5-F71B879128FF</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <Compile Condition=""Exists('.now\Program.cs')"" Include="".now\Program.cs""/>
    <Compile Condition=""Exists('.now\Startup.cs')"" Include="".now\Startup.cs""/>
  </ItemGroup>

  <ItemGroup>
    <Folder Include=""wwwroot\"" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include=""Microsoft.AspNetCore.All"" Version=""2.0.0-preview1-final"" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include=""Microsoft.DotNet.Watcher.Tools"" Version=""2.0.0-preview1-final"" />
  </ItemGroup>

</Project>";
    }
}

